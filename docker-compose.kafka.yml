services:
  redpanda:
    image: redpandadata/redpanda:v24.1.11
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp=1
      - --memory=1G
      - --reserve-memory=0M
      - --node-id=0
      - --check=false
      - --kafka-addr=PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr=PLAINTEXT://redpanda:9092
      - --rpc-addr=0.0.0.0:33145
      - --advertise-rpc-addr=redpanda:33145
      - --pandaproxy-addr=0.0.0.0:8082
      - --advertise-pandaproxy-addr=redpanda:8082
      - --set redpanda.enable_transactions=true
      - --set redpanda.enable_idempotence=true
      - --set redpanda.auto_create_topics_enabled=true
    ports:
      - "9092:9092"
      - "9644:9644"
      - "8082:8082"
    healthcheck:
      test: ["CMD", "bash", "-lc", "rpk cluster info -X brokers=redpanda:9092 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30

  redpanda-console:
    image: redpandadata/console:v2.7.2
    environment:
      KAFKA_BROKERS: redpanda:9092
    ports:
      - "8081:8080"
    depends_on:
      redpanda:
        condition: service_healthy

  producer:
    build:
      context: .
      dockerfile: docker/producer.Dockerfile
    environment:
      KAFKA_BOOTSTRAP: "redpanda:9092"
      KAFKA_TOPIC: "trades.events"
    depends_on:
      redpanda:
        condition: service_healthy

  consumer:
    build:
      context: .
      dockerfile: docker/consumer.Dockerfile
    environment:
      KAFKA_BOOTSTRAP: "redpanda:9092"
      KAFKA_TOPIC: "trades.events"
      KAFKA_GROUP: "trades-consumers"
      SRTA_DB_URI: "postgresql://srta:srta_pw@postgres:5432/srta"
    depends_on:
      redpanda:
        condition: service_healthy
      postgres:
        condition: service_started
